syntax = "proto3";

package roleproto;

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = "github.com/kucow/golang-grpc-base-project/pkg/proto/v1/role;roleproto";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";
import "pkg/proto/v1/common/common.proto";

// Here is the overall greeting service definition where we define all our endpoints
service RoleService {
  // Find all Roles
  rpc FindAllRoles (FindAllRolesRequest) returns (ListRolesResponse) {
    option (google.api.http) = {
      get: "/v1/roles"
    };
  }

  // Find Role by ID
  rpc FindRoleByID (commonproto.UUIDRequest) returns (Role) {
    option (google.api.http) = {
      get: "/v1/roles/{id=*}"
    };
  }

  // Create new Role
  rpc CreateRole (CreateRoleRequest) returns (google.rpc.Status) {
    option (google.api.http) = {
      post: "/v1/roles"
      body: "*"
    };
  }

  // Update Role by ID
  rpc UpdateRole (UpdateRoleRequest) returns (google.rpc.Status) {
    option (google.api.http) = {
      put: "/v1/roles/{id=*}"
      body: "*"
    };
  }

  // Delete Role
  rpc DeleteRole (commonproto.UUIDRequest) returns (google.rpc.Status) {
    option (google.api.http) = {
      delete: "/v1/roles/{id=*}"
    };
  }
}

message FindAllRolesRequest {
  int32 page = 1;
}

message ListRolesResponse {
  // Roles
  repeated Role data = 1;

  int32 next_page = 2;
}

message Role {
  // Output only. Id of the role.
  uint64 id = 1;

  // Output only. Name of the role.
  string name = 2;

  // Output only. Email of the role.
  string slug = 3;

  // Output only. Status of the role.
  int32 status = 4;
}

// The request create new Role
message CreateRoleRequest {
  string name = 1;
  string slug = 2;
  int32 status = 3;

  // List Permissions ID
  repeated uint64 permissions = 4;
}

// The request update Role
message UpdateRoleRequest {
  uint64 id = 1;
  optional string name = 2;
  optional string slug = 3;
  optional int32 status = 4;

  // List Permissions ID
  repeated uint64 permissions = 5;
}