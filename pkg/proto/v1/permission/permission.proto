syntax = "proto3";

package permissionproto;

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = "github.com/kucow/golang-grpc-base-project/pkg/proto/v1/permission;permissionproto";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";
import "pkg/proto/v1/common/common.proto";

// Here is the overall greeting service definition where we define all our endpoints
service PermissionService {
  // Find all Permissions
  rpc FindAllPermissions (FindAllPermissionsRequest) returns (ListPermissionsResponse) {
    option (google.api.http) = {
      get: "/v1/permissions"
    };
  }

  // Find Permission by ID
  rpc FindPermissionByID (commonproto.UUIDRequest) returns (Permission) {
    option (google.api.http) = {
      get: "/v1/permissions/{id=*}"
    };
  }

  // Create new Permission
  rpc CreatePermission (CreatePermissionRequest) returns (google.rpc.Status) {
    option (google.api.http) = {
      post: "/v1/permissions"
      body: "*"
    };
  }

  // Update Permission by ID
  rpc UpdatePermission (UpdatePermissionRequest) returns (google.rpc.Status) {
    option (google.api.http) = {
      put: "/v1/permissions/{id=*}"
      body: "*"
    };
  }

  // Delete Permission
  rpc DeletePermission (commonproto.UUIDRequest) returns (google.rpc.Status) {
    option (google.api.http) = {
      delete: "/v1/permissions/{id=*}"
    };
  }
}

message FindAllPermissionsRequest {
  int32 page = 1;
}

message ListPermissionsResponse {
  // Permissions
  repeated Permission data = 1;

  int32 next_page = 2;
}

message Permission {
  // Output only. Id of the permission.
  string id = 1;

  // Output only. Name of the permission.
  string name = 2;

  // Output only. Email of the permission.
  string slug = 3;

  // Output only. Status of the permission.
  int32 status = 4;
}

// The request create new Permission
message CreatePermissionRequest {
  string name = 1;
  string slug = 2;
  int32 status = 3;
}

// The request update Permission
message UpdatePermissionRequest {
  string id = 1;
  optional string name = 2;
  optional string slug = 3;
  optional int32 status = 4;
}